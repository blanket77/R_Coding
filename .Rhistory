getwd()
source(good.R)
source("good.R")
pwd=("")
d
setwd("R_test/")
source("good.R")
a <- getwd()
a
a <- getwd()
a
q()
getwd()
help.start()
1+2
plot(cars)
x <- 33+44
x
?cars
fah <- readline("Fahrenheit? ")
fah <- readline("Fahrenheit? ")
30
fah <- as.numeric(fah)
fah <- readline("Fahrenheit? ")
fah <- as.numeric(fah)
cel <- (fah - 32) / 1.8
print(paste("Celsius =" ,cel)
source("1-2.R")
print(paste("Celsius =" ,cel)
source("1-2.R")
source("1-2.R")
help.start()
help(median)
help(median)
?median
library(sos)
install.packages("sos")
library(sos)
library(sos)
findFn("social network analysis")
help.start()
help(median)
args(median)
example(median)
args(median)
args(median)
example(median)
help.search("xyplot")
help.search("xyplot") # 이름을 정확하게 모를 때 유용
help.search("xyplot") # 이름을 정확하게 모를 때 유용
# 이름을 정확하게 모를 때 유용
help.search("xyplot")
hero.vector <- c("Superman", "Batman", "Spiderman")
apropos("vector")
?regex
c("A", "B", "C", "A", "B")
c(1,2,3,4,5)
library()
rm(list = ls())
factor(c("A", "B", "C", "A", "B"))
matrix(1:12,3,4)
data.frame(product=c("A","B","C","A","B"),
price=c(100,200,300))
data.frame(product=c("A","B","C","A","B"),
price=c(100,200,300))
data.frame(product=c("A","B","C"),
price=c(100,200,300))
data.frame(product=c("A","B","C"),
price=c(100,200,300))
data.frame(product=c("A","B","C"),
price=c(100,200,300))
list(x=c("A", "B", "C", "A", "B"),
y=matrix(1:12,3,4),
data.frame(product=c("A","B","C"),
price=c(100,200,300)))
list(x=c("A", "B", "C", "A", "B"),
y=matrix(1:12,3,4),
z=data.frame(product=c("A","B","C"),
price=c(100,200,300)))
1+2
"+"(1,2)
c(1,2,3) + c(4,5,6)
c(1,2,3) + c(4,5,6)
c(1,2,3) * c(4,5,6)
c(10,20,30) / c(2,4,6)
c(10,20,30) %% c(3,5,7)
c(10,20,30) %/% c(3,5,7)
c(10,20,30) %/% c(3,5,7) #몫몫
c(10,20,30) %/% c(3,5,7) #몫
c(1,2,3,1,2,3) + c(4,5,6,7,8,9)
c(1,2,3)+c(4,5,6,7,8,9)
c(1,2,3)+c(4,5,6,7,8,9)
c(1,2,3,1,2,3) + c(4,5,6,7,8,9)
c(1,3,5) + 10
c(1,2,3) + c(4,5,6,7,8)
c(1,2,3) + c(4,5,6,7,8)
==, !=
x | y, x&y , isTRUE()
v<-pi
w <- 10/3
v==w
isTRUE(v==w)
y ==z
y == z
y <- c(0,25,50,75,100)
z <- c(50,50,50,50,50)
y == z
y == 50
as.numeric(TRUE)
as.numeric(FALSE)
TRUE + True
TRUE + TRUE
sum(y>50)
any(-3:3 > 0) #한개라도 만족하면
all(-3:3 > 0)
sqrt(2)
identical(sqrt(2)^2,2)
all.equal(sqrt(2)^2,2)
identical(sqrt(2)^2,2) # 같은지 비교
all.equal(sqrt(2)^2,3)
isTRUE(all.equal(sqrt(2),3))
fruit <- c("Apple", "Bannana", "Strawberry")
food <- c("Pie", "Juice", "Cake")
fruit <- c("Apple", "Bannana", "Strawberry")
food <- c("Pie", "Juice", "Cake")
paste(fruit, food)
paste(fruit, "Juice")
c(1,2,3,4,5,6,7,8,9,10)
odd <- c(1,3,5)
even <- c(2,4,6)
odd
even
c(odd, even)
9:3
3:9
5:-3
example(seq)
seq(from=3, to=9)
seq(from=3, to=9, by=2)
seq(from=3.5, to=1.5, by =-0.5)
seq(from=0, to=100, length.out=5)
seq(from=-1, to=1, length.out=5)
example(rep)
rep(1, times=3)
rep(c(1,2,3), time(3))
rep(c(1,2,3), times=3)
rep(c(1,2,3,) each=3)
rep(c(1,2,3) each=3)
rep(c(1,2,3), each=3)
rep(c(1,2,3), length.out=8)
rep(c(1,2,3), times=c(1,2,3))
num <- c(1,2,3)
cha <- c("X","Y","Z")
c(num, cha)
str(cha)
str(num)
length(num)
LETTERS
letters
month.name
month.abb
pi
month.name[c]
n <- c(12,9,3,5,1)
month.name[c]
month.name[c]
n
month.name
month.name[1]
month.name[n]
rm(list=ls())
abs(-3:3
abs(-3:3)
abs(-3:3)
log(1:5)
log(1:5, base=exp(1))
log10(1:5)
log2(1:5)
exp(1:5)
y <- exp(1:5)
y
log(y0)
log(y)
factorial(1:5)
choose(5,2)
sqrt(1:5)
options("digits")
pi
pi*100
pi*100
)
signif(456.789, digits=2)
signif(456.789, digits=3)
signif(456.789, digits=4)
round(456.789, digits-2)
round(456.789, digits=2)
round(456.789)
round(sqrt(1:5), digits = 2)
round(456.789, digits=-2)
round(456.789, digits=-1)
round(11.5)
round(-3.5)
round(-5.5)
floor(456.78) #올림
floor(-456.78)
ceiling(456.78) #내림
ceiling(456.18) #올림
ceiling(456.78) #올림
ceiling(-456.78)
trunc(456.78)
inf
Inf
3/0
